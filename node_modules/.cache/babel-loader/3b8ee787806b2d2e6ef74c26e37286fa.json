{"ast":null,"code":"var _jsxFileName = \"/home/ishu/Documents/todolist/src/App.js\";\nimport React, { Component } from 'react';\nimport { Button, Jumbotron, Container, Toast } from 'react-bootstrap';\nimport './App.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      newItem: \"\",\n      list: [],\n      show: show,\n      toggleShow: true\n    };\n  }\n\n  updateInput(key, value) {\n    this.setState({\n      [key]: value\n    });\n  }\n\n  addItem() {\n    //create item with unique id\n    const newItem = {\n      id: 1 + Math.random(),\n      value: this.state.newItem.slice()\n    }; //copy of current list of items\n\n    const list = [...this.state.list]; //add new item to list\n\n    list.push(newItem); //update state with new list and reset newItem input\n\n    this.setState({\n      list,\n      newItem: \"\"\n    });\n  }\n\n  deleteItem(id) {\n    //copy current list of items\n    const list = [...this.state.list]; //filter out item being deleted\n\n    const updatedList = list.filter(item => item.id !== id);\n    this.setState({\n      list: updatedList\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Container, {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Jumbotron, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 10\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }\n    }, \"Todo List\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }\n    }, \"Add an Item!\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Type the text here\",\n      value: this.state.newItem,\n      onChange: e => this.updateInput(\"newItem\", e.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"primary\",\n      onClick: () => this.addItem(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 15\n      }\n    }, \"Add\")), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"Dot\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }\n    }, this.state.list.map(item => {\n      return (\n        /*#__PURE__*/\n        // <Toast key={item.id}>\n        // {!show && <Button onClick={() => toggleShow(true)}>Show Toast</Button>}\n        React.createElement(Toast, {\n          key: item.id,\n          show: show,\n          onClose: () => toggleShow(false),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(Toast.Header, {\n          className: \"col-sm-12\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 19\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"col-sm-6\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"strong\", {\n          className: \"itemvalue\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 21\n          }\n        }, item.value)), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"col-sm-6\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(Button, {\n          className: \"Buttonname\",\n          onClick: () => this.deleteItem(item.id),\n          variant: \"primary\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 21\n          }\n        }, \"x\"))))\n      );\n    }))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/ishu/Documents/todolist/src/App.js"],"names":["React","Component","Button","Jumbotron","Container","Toast","App","constructor","props","state","newItem","list","show","toggleShow","updateInput","key","value","setState","addItem","id","Math","random","slice","push","deleteItem","updatedList","filter","item","render","e","target","map"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Button, Jumbotron, Container, Toast} from 'react-bootstrap';\nimport './App.css';\n\nclass App extends Component {\n  constructor(props){\n    super(props);\n    this.state={\n      newItem:\"\",\n      list:[],\n      show: show,\n      toggleShow: true,\n    }\n  }\n\n  updateInput(key, value){\n    this.setState({\n      [key]: value\n    });\n  }\n  addItem(){\n    //create item with unique id\n    const newItem={\n      id: 1 + Math.random(),\n      value: this.state.newItem.slice()\n    };\n    //copy of current list of items\n    const list = [...this.state.list];\n\n    //add new item to list\n    list.push(newItem);\n\n    //update state with new list and reset newItem input\n    this.setState({\n      list,\n      newItem:\"\"\n    })\n  }\n\n  deleteItem(id){\n    //copy current list of items\n    const list = [...this.state.list];\n\n    //filter out item being deleted\n    const updatedList = list.filter(item => item.id !== id);\n    this.setState({\n      list: updatedList\n    });\n  }\n\n  render(){\n    return (\n      <Container className=\"App\">\n         <Jumbotron>\n            <h1>Todo List</h1>\n            <p>\n              Add an Item!\n            </p>\n            <p>\n            <input\n              type = \"text\"\n              placeholder=\"Type the text here\"\n              value = {this.state.newItem}\n              onChange={e => this.updateInput(\"newItem\", e.target.value)}\n              />\n              </p>\n            <p>\n              <Button variant=\"primary\" onClick={() => this.addItem()}>Add</Button>\n            </p>\n            <p className=\"Dot\">\n            {this.state.list.map(item => {\n              return (\n                // <Toast key={item.id}>\n                // {!show && <Button onClick={() => toggleShow(true)}>Show Toast</Button>}\n                <Toast key={item.id} show={show} onClose={() => toggleShow(false)}>\n                  <Toast.Header className=\"col-sm-12\">\n                    <div className=\"col-sm-6\">\n                    <strong className=\"itemvalue\">{item.value}</strong>\n                    </div>\n                    <div className=\"col-sm-6\">\n                    <Button className=\"Buttonname\" onClick={() => this.deleteItem(item.id)} variant=\"primary\">\n                      x\n                    </Button>\n                    </div>\n                  </Toast.Header>\n                </Toast>\n              )\n            })} \n            </p>\n          </Jumbotron>\n        </Container>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}