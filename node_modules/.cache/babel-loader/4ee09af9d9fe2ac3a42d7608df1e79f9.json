{"ast":null,"code":"var _jsxFileName = \"/home/ishu/Documents/todolist/src/App.js\";\nimport React, { Component } from 'react';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      newItem: \"\",\n      list: []\n    };\n  }\n\n  updateInput(key, value) {\n    this.setState({\n      [key]: vlaue\n    });\n  }\n\n  addItem() {\n    //create item with unique id\n    const newItem = {\n      id: 1 + Math.random(),\n      value: this.state.newItem.slice()\n    }; //cpoy of current list of itms\n\n    const list = [...this.state.list]; //add new item to list\n\n    list.push(newItem); //update state with new list and reset newItem input\n\n    this.setState({\n      list,\n      newItem: \"\"\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }\n    }, \"Add an Item...\", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"TYpe the text here\",\n      value: this.state.newItem,\n      onChange: e => this.updateInput(\"newItem\", e.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => this.addItem(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }\n    }, \"Add\")));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/ishu/Documents/todolist/src/App.js"],"names":["React","Component","App","constructor","props","state","newItem","list","updateInput","key","value","setState","vlaue","addItem","id","Math","random","slice","push","render","e","target"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,MAAMC,GAAN,SAAkBD,SAAlB,CAA4B;AAC1BE,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAW;AACTC,MAAAA,OAAO,EAAC,EADC;AAETC,MAAAA,IAAI,EAAC;AAFI,KAAX;AAKD;;AAEDC,EAAAA,WAAW,CAACC,GAAD,EAAMC,KAAN,EAAY;AACrB,SAAKC,QAAL,CAAc;AACZ,OAACF,GAAD,GAAOG;AADK,KAAd;AAGD;;AACDC,EAAAA,OAAO,GAAE;AACP;AACA,UAAMP,OAAO,GAAC;AACZQ,MAAAA,EAAE,EAAE,IAAIC,IAAI,CAACC,MAAL,EADI;AAEZN,MAAAA,KAAK,EAAE,KAAKL,KAAL,CAAWC,OAAX,CAAmBW,KAAnB;AAFK,KAAd,CAFO,CAMP;;AACA,UAAMV,IAAI,GAAG,CAAC,GAAG,KAAKF,KAAL,CAAWE,IAAf,CAAb,CAPO,CASP;;AACAA,IAAAA,IAAI,CAACW,IAAL,CAAUZ,OAAV,EAVO,CAYP;;AACA,SAAKK,QAAL,CAAc;AACZJ,MAAAA,IADY;AAEZD,MAAAA,OAAO,EAAC;AAFI,KAAd;AAID;;AAEDa,EAAAA,MAAM,GAAE;AACN,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCAEE;AACA,MAAA,IAAI,EAAG,MADP;AAEA,MAAA,WAAW,EAAC,oBAFZ;AAGA,MAAA,KAAK,EAAI,KAAKd,KAAL,CAAWC,OAHpB;AAIA,MAAA,QAAQ,EAAEc,CAAC,IAAI,KAAKZ,WAAL,CAAiB,SAAjB,EAA4BY,CAAC,CAACC,MAAF,CAASX,KAArC,CAJf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,eAQE;AACA,MAAA,OAAO,EAAE,MAAM,KAAKG,OAAL,EADf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aARF,CADF,CADF;AAkBD;;AArDyB;;AAwD5B,eAAeX,GAAf","sourcesContent":["import React, { Component } from 'react';\n\nclass App extends Component {\n  constructor(props){\n    super(props);\n    this.state={\n      newItem:\"\",\n      list:[]\n    }\n\n  }\n\n  updateInput(key, value){\n    this.setState({\n      [key]: vlaue\n    });\n  }\n  addItem(){\n    //create item with unique id\n    const newItem={\n      id: 1 + Math.random(),\n      value: this.state.newItem.slice()\n    };\n    //cpoy of current list of itms\n    const list = [...this.state.list];\n\n    //add new item to list\n    list.push(newItem);\n\n    //update state with new list and reset newItem input\n    this.setState({\n      list,\n      newItem:\"\"\n    })\n  }\n\n  render(){\n    return (\n      <div className=\"App\">\n        <div>\n          Add an Item...\n          <input\n          type = \"text\"\n          placeholder=\"TYpe the text here\"\n          value = {this.state.newItem}\n          onChange={e => this.updateInput(\"newItem\", e.target.value)}\n          />\n          <button\n          onClick={() => this.addItem()}\n          >\n          Add\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}